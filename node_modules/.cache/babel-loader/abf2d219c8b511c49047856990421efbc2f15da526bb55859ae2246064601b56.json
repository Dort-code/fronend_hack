{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { ChevronDown } from 'lucide-react';\nimport './Dropdown.css';\nimport React from 'react';\nexport function Dropdown({\n  options,\n  value,\n  onChange,\n  label,\n  type = 'click'\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const dropdownRef = useRef(null);\n  const listRef = useRef(null);\n\n  // Обработчик клика вне дропдауна\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Обработчик прокрутки колесика мыши\n  const handleWheel = e => {\n    if (type === 'hover' && isHovered) {\n      e.preventDefault();\n      const currentIndex = options.indexOf(value);\n      let nextIndex;\n      if (e.deltaY > 0) {\n        nextIndex = (currentIndex + 1) % options.length;\n      } else {\n        nextIndex = (currentIndex - 1 + options.length) % options.length;\n      }\n      onChange(options[nextIndex]);\n    }\n  };\n\n  // Добавление/удаление обработчика прокрутки\n  useEffect(() => {\n    const dropdownElement = dropdownRef.current;\n    if (dropdownElement && type === 'hover') {\n      dropdownElement.addEventListener('wheel', handleWheel, {\n        passive: false\n      });\n      return () => dropdownElement.removeEventListener('wheel', handleWheel);\n    }\n  }, [type, isHovered, value, options]);\n\n  // Пропсы контейнера в зависимости от типа\n  const containerProps = type === 'hover' ? {\n    onMouseEnter: () => {\n      setIsOpen(true);\n      setIsHovered(true);\n    },\n    onMouseLeave: () => {\n      setIsOpen(false);\n      setIsHovered(false);\n    }\n  } : {\n    onClick: () => setIsOpen(!isOpen)\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    ref: dropdownRef,\n    className: 'dropdown-container',\n    ...containerProps\n  }, [\n  /*#__PURE__*/\n  // Кнопка дропдауна\n  React.createElement('div', {\n    key: 'dropdown-button',\n    className: `dropdown-button ${isOpen ? 'dropdown-button-open' : ''}`\n  }, [/*#__PURE__*/React.createElement('span', {\n    key: 'label',\n    className: 'dropdown-label'\n  }, value || label), /*#__PURE__*/React.createElement(ChevronDown, {\n    key: 'icon',\n    className: `dropdown-icon ${isOpen ? 'dropdown-icon-open' : ''}`\n  })]),\n  // Список опций\n  isOpen && /*#__PURE__*/React.createElement('ul', {\n    key: 'dropdown-list',\n    ref: listRef,\n    className: 'dropdown-list'\n  }, options.map(option => (/*#__PURE__*/React.createElement('li', {\n    key: option,\n    className: `dropdown-item ${option === value ? 'dropdown-item-selected' : ''}`,\n    onClick: () => {\n      onChange(option);\n      if (type === 'click') setIsOpen(false);\n    }\n  }, option))))]);\n}\n_s(Dropdown, \"5xyzZUX1w52YHSnJPC+hFiuvFIs=\");\n_c = Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","useRef","useEffect","ChevronDown","React","Dropdown","options","value","onChange","label","type","_s","isOpen","setIsOpen","isHovered","setIsHovered","dropdownRef","listRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleWheel","e","preventDefault","currentIndex","indexOf","nextIndex","deltaY","length","dropdownElement","passive","containerProps","onMouseEnter","onMouseLeave","onClick","createElement","ref","className","key","map","option","_c","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/untitled/src/components/Dropdown.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport './Dropdown.css';\r\nimport React from 'react';\r\n\r\nexport function Dropdown({ options, value, onChange, label, type = 'click' }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n    const listRef = useRef(null);\r\n\r\n    // Обработчик клика вне дропдауна\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    // Обработчик прокрутки колесика мыши\r\n    const handleWheel = (e) => {\r\n        if (type === 'hover' && isHovered) {\r\n            e.preventDefault();\r\n            const currentIndex = options.indexOf(value);\r\n            let nextIndex;\r\n\r\n            if (e.deltaY > 0) {\r\n                nextIndex = (currentIndex + 1) % options.length;\r\n            } else {\r\n                nextIndex = (currentIndex - 1 + options.length) % options.length;\r\n            }\r\n\r\n            onChange(options[nextIndex]);\r\n        }\r\n    };\r\n\r\n    // Добавление/удаление обработчика прокрутки\r\n    useEffect(() => {\r\n        const dropdownElement = dropdownRef.current;\r\n        if (dropdownElement && type === 'hover') {\r\n            dropdownElement.addEventListener('wheel', handleWheel, { passive: false });\r\n            return () => dropdownElement.removeEventListener('wheel', handleWheel);\r\n        }\r\n    }, [type, isHovered, value, options]);\r\n\r\n    // Пропсы контейнера в зависимости от типа\r\n    const containerProps = type === 'hover' ? {\r\n        onMouseEnter: () => {\r\n            setIsOpen(true);\r\n            setIsHovered(true);\r\n        },\r\n        onMouseLeave: () => {\r\n            setIsOpen(false);\r\n            setIsHovered(false);\r\n        }\r\n    } : {\r\n        onClick: () => setIsOpen(!isOpen),\r\n    };\r\n\r\n    return React.createElement(\r\n        'div',\r\n        {\r\n            ref: dropdownRef,\r\n            className: 'dropdown-container',\r\n            ...containerProps\r\n        },\r\n        [\r\n            // Кнопка дропдауна\r\n            React.createElement(\r\n                'div',\r\n                {\r\n                    key: 'dropdown-button',\r\n                    className: `dropdown-button ${isOpen ? 'dropdown-button-open' : ''}`\r\n                },\r\n                [\r\n                    React.createElement(\r\n                        'span',\r\n                        { key: 'label', className: 'dropdown-label' },\r\n                        value || label\r\n                    ),\r\n                    React.createElement(\r\n                        ChevronDown,\r\n                        {\r\n                            key: 'icon',\r\n                            className: `dropdown-icon ${isOpen ? 'dropdown-icon-open' : ''}`\r\n                        }\r\n                    )\r\n                ]\r\n            ),\r\n            // Список опций\r\n            isOpen && React.createElement(\r\n                'ul',\r\n                {\r\n                    key: 'dropdown-list',\r\n                    ref: listRef,\r\n                    className: 'dropdown-list'\r\n                },\r\n                options.map(option => (\r\n                    React.createElement(\r\n                        'li',\r\n                        {\r\n                            key: option,\r\n                            className: `dropdown-item ${option === value ? 'dropdown-item-selected' : ''}`,\r\n                            onClick: () => {\r\n                                onChange(option);\r\n                                if (type === 'click') setIsOpen(false);\r\n                            }\r\n                        },\r\n                        option\r\n                    )\r\n                ))\r\n            )\r\n        ]\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}