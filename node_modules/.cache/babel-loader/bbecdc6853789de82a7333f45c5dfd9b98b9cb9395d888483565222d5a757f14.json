{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\WebstormProjects\\\\fronend_hack\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { UserPA } from './Page/UserPA';\nimport { AdminPA } from './Page/AdminPA';\nimport { PredPA } from './Page/PredPA';\nimport './Page/HederUserPA.css';\nimport logo from \"./Page/TNS_Energo_logo.png\";\nimport { FaSignInAlt } from \"react-icons/fa\";\nimport { LoginPage } from './Page/LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authInfo, setAuthInfo] = useState({\n    isLoggedIn: false,\n    role: null\n  });\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const handleLoginClick = () => {\n    setShowLoginModal(true);\n  };\n  const handleSuccessfulLogin = role => {\n    setAuthInfo({\n      isLoggedIn: true,\n      role: role\n    });\n    setShowLoginModal(false);\n  };\n  const handleCloseModal = () => {\n    setShowLoginModal(false);\n  };\n  const handleLogout = () => {\n    setAuthInfo({\n      isLoggedIn: false,\n      role: null\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"app-container\">\n    //     {!authInfo.isLoggedIn ? (\n    //         <header className=\"header\">\n    //             <div className=\"logo-container\">\n    //                 <img src={logo} alt=\"Логотип ТНС Энерго\" className=\"logo\" />\n    //             </div>\n    //             <button\n    //                 className=\"login-btn\"\n    //                 onClick={handleLoginClick}\n    //                 aria-label=\"Вход\"\n    //             >\n    //                 <FaSignInAlt size={18} />\n    //                 <span className=\"login-text\">Войти</span>\n    //             </button>\n    //         </header>\n    //     ) : authInfo.role === 'admin' ? (\n    //         <AdminPA onLogout={handleLogout} />\n    //     ) : authInfo.role === 'pred' ? (\n    //         <PredPA onLogout={handleLogout} />\n    //     ) : (\n    //         <UserPA onLogout={handleLogout} />\n    //     )}\n    //\n    //     {!authInfo.isLoggedIn && !showLoginModal && (\n    //         <div className=\"welcome-message\">\n    //             <h2>Добро пожаловать в систему ТНС Энерго</h2>\n    //             <p>Пожалуйста, войдите в систему для доступа к функциям</p>\n    //         </div>\n    //     )}\n    //\n    //     {showLoginModal && (\n    //         <LoginPage\n    //             onLogin={handleSuccessfulLogin}\n    //             onClose={handleCloseModal}\n    //         />\n    //     )}\n    // </div>\n    _jsxDEV(AdminPA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"NEGANezaWOIbnef3gGfuNRWaJvw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserPA","AdminPA","PredPA","logo","FaSignInAlt","LoginPage","jsxDEV","_jsxDEV","App","_s","authInfo","setAuthInfo","isLoggedIn","role","showLoginModal","setShowLoginModal","handleLoginClick","handleSuccessfulLogin","handleCloseModal","handleLogout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/fronend_hack/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { UserPA } from './Page/UserPA';\r\nimport { AdminPA } from './Page/AdminPA';\r\nimport { PredPA } from './Page/PredPA';\r\nimport './Page/HederUserPA.css';\r\nimport logo from \"./Page/TNS_Energo_logo.png\";\r\nimport { FaSignInAlt } from \"react-icons/fa\";\r\nimport { LoginPage } from './Page/LoginPage';\r\n\r\nfunction App() {\r\n    const [authInfo, setAuthInfo] = useState({\r\n        isLoggedIn: false,\r\n        role: null\r\n    });\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n\r\n    const handleLoginClick = () => {\r\n        setShowLoginModal(true);\r\n    };\r\n\r\n    const handleSuccessfulLogin = (role) => {\r\n        setAuthInfo({\r\n            isLoggedIn: true,\r\n            role: role\r\n        });\r\n        setShowLoginModal(false);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowLoginModal(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        setAuthInfo({\r\n            isLoggedIn: false,\r\n            role: null\r\n        });\r\n    };\r\n\r\n    return (\r\n        // <div className=\"app-container\">\r\n        //     {!authInfo.isLoggedIn ? (\r\n        //         <header className=\"header\">\r\n        //             <div className=\"logo-container\">\r\n        //                 <img src={logo} alt=\"Логотип ТНС Энерго\" className=\"logo\" />\r\n        //             </div>\r\n        //             <button\r\n        //                 className=\"login-btn\"\r\n        //                 onClick={handleLoginClick}\r\n        //                 aria-label=\"Вход\"\r\n        //             >\r\n        //                 <FaSignInAlt size={18} />\r\n        //                 <span className=\"login-text\">Войти</span>\r\n        //             </button>\r\n        //         </header>\r\n        //     ) : authInfo.role === 'admin' ? (\r\n        //         <AdminPA onLogout={handleLogout} />\r\n        //     ) : authInfo.role === 'pred' ? (\r\n        //         <PredPA onLogout={handleLogout} />\r\n        //     ) : (\r\n        //         <UserPA onLogout={handleLogout} />\r\n        //     )}\r\n        //\r\n        //     {!authInfo.isLoggedIn && !showLoginModal && (\r\n        //         <div className=\"welcome-message\">\r\n        //             <h2>Добро пожаловать в систему ТНС Энерго</h2>\r\n        //             <p>Пожалуйста, войдите в систему для доступа к функциям</p>\r\n        //         </div>\r\n        //     )}\r\n        //\r\n        //     {showLoginModal && (\r\n        //         <LoginPage\r\n        //             onLogin={handleSuccessfulLogin}\r\n        //             onClose={handleCloseModal}\r\n        //         />\r\n        //     )}\r\n        // </div>\r\n        <AdminPA/>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,wBAAwB;AAC/B,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAME,qBAAqB,GAAIJ,IAAI,IAAK;IACpCF,WAAW,CAAC;MACRC,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAEA;IACV,CAAC,CAAC;IACFE,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC3BH,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBR,WAAW,CAAC;MACRC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAN,OAAA,CAACN,OAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;AAElB;AAACd,EAAA,CAtEQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAwEZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}