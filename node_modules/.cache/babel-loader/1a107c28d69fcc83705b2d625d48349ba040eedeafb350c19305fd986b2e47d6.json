{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Home.css'; // Импорт стилей\nimport React from 'react';\nexport function Home() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n  };\n  const handleInputChange = function (e) {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'form-container'\n  }, /*#__PURE__*/React.createElement('h1', {\n    className: 'form-title'\n  }, 'Welcome'), /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleSubmit,\n    className: 'form'\n  }, createInputField('name', 'Name', formData.name, handleInputChange, 'text'), createInputField('email', 'Email', formData.email, handleInputChange, 'email'), createInputField('password', 'Password', formData.password, handleInputChange, 'password'), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'submit-button'\n  }, 'Register')));\n}\n\n// Вспомогательная функция для создания полей ввода\n_s(Home, \"BkA50nIZKuIojqIkBjWRzaBQUvU=\");\n_c = Home;\nfunction createInputField(id, label, value, onChange, type = 'text') {\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'input-group'\n  }, /*#__PURE__*/React.createElement('label', {\n    htmlFor: id,\n    className: 'input-label'\n  }, label), /*#__PURE__*/React.createElement('input', {\n    type: type,\n    id: id,\n    value: value,\n    onChange: onChange,\n    className: 'input-field',\n    required: false\n  }));\n}\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","React","Home","_s","formData","setFormData","name","email","password","handleSubmit","e","preventDefault","console","log","handleInputChange","id","value","target","prev","createElement","className","onSubmit","createInputField","type","_c","label","onChange","htmlFor","required","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/untitled/src/pages/Home.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './Home.css'; // Импорт стилей\r\nimport React from 'react';\r\n\r\nexport function Home() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleSubmit = function(e) {\r\n        e.preventDefault();\r\n        console.log('Form submitted:', formData);\r\n    };\r\n\r\n    const handleInputChange = function(e) {\r\n        const { id, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [id]: value }));\r\n    };\r\n\r\n    return React.createElement(\r\n        'div',\r\n        { className: 'form-container' },\r\n        React.createElement(\r\n            'h1',\r\n            { className: 'form-title' },\r\n            'Welcome'\r\n        ),\r\n        React.createElement(\r\n            'form',\r\n            { onSubmit: handleSubmit, className: 'form' },\r\n            createInputField('name', 'Name', formData.name, handleInputChange, 'text'),\r\n            createInputField('email', 'Email', formData.email, handleInputChange, 'email'),\r\n            createInputField('password', 'Password', formData.password, handleInputChange, 'password'),\r\n            React.createElement(\r\n                'button',\r\n                { type: 'submit', className: 'submit-button' },\r\n                'Register'\r\n            )\r\n        )\r\n    );\r\n}\r\n\r\n// Вспомогательная функция для создания полей ввода\r\nfunction createInputField(id, label, value, onChange, type = 'text') {\r\n    return React.createElement(\r\n        'div',\r\n        { className: 'input-group' },\r\n        React.createElement(\r\n            'label',\r\n            { htmlFor: id, className: 'input-label' },\r\n            label\r\n        ),\r\n        React.createElement('input', {\r\n            type: type,\r\n            id: id,\r\n            value: value,\r\n            onChange: onChange,\r\n            className: 'input-field',\r\n            required: false\r\n        })\r\n    );\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY,CAAC,CAAC;AACrB,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACrCM,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,SAAAA,CAASC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,QAAQ,CAAC;EAC5C,CAAC;EAED,MAAMU,iBAAiB,GAAG,SAAAA,CAASJ,CAAC,EAAE;IAClC,MAAM;MAAEK,EAAE;MAAEC;IAAM,CAAC,GAAGN,CAAC,CAACO,MAAM;IAC9BZ,WAAW,CAACa,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,EAAE,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,oBAAOf,KAAK,CAACkB,aAAa,CACtB,KAAK,EACL;IAAEC,SAAS,EAAE;EAAiB,CAAC,eAC/BnB,KAAK,CAACkB,aAAa,CACf,IAAI,EACJ;IAAEC,SAAS,EAAE;EAAa,CAAC,EAC3B,SACJ,CAAC,eACDnB,KAAK,CAACkB,aAAa,CACf,MAAM,EACN;IAAEE,QAAQ,EAAEZ,YAAY;IAAEW,SAAS,EAAE;EAAO,CAAC,EAC7CE,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAElB,QAAQ,CAACE,IAAI,EAAEQ,iBAAiB,EAAE,MAAM,CAAC,EAC1EQ,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAElB,QAAQ,CAACG,KAAK,EAAEO,iBAAiB,EAAE,OAAO,CAAC,EAC9EQ,gBAAgB,CAAC,UAAU,EAAE,UAAU,EAAElB,QAAQ,CAACI,QAAQ,EAAEM,iBAAiB,EAAE,UAAU,CAAC,eAC1Fb,KAAK,CAACkB,aAAa,CACf,QAAQ,EACR;IAAEI,IAAI,EAAE,QAAQ;IAAEH,SAAS,EAAE;EAAgB,CAAC,EAC9C,UACJ,CACJ,CACJ,CAAC;AACL;;AAEA;AAAAjB,EAAA,CAxCgBD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAyCpB,SAASoB,gBAAgBA,CAACP,EAAE,EAAEU,KAAK,EAAET,KAAK,EAAEU,QAAQ,EAAEH,IAAI,GAAG,MAAM,EAAE;EACjE,oBAAOtB,KAAK,CAACkB,aAAa,CACtB,KAAK,EACL;IAAEC,SAAS,EAAE;EAAc,CAAC,eAC5BnB,KAAK,CAACkB,aAAa,CACf,OAAO,EACP;IAAEQ,OAAO,EAAEZ,EAAE;IAAEK,SAAS,EAAE;EAAc,CAAC,EACzCK,KACJ,CAAC,eACDxB,KAAK,CAACkB,aAAa,CAAC,OAAO,EAAE;IACzBI,IAAI,EAAEA,IAAI;IACVR,EAAE,EAAEA,EAAE;IACNC,KAAK,EAAEA,KAAK;IACZU,QAAQ,EAAEA,QAAQ;IAClBN,SAAS,EAAE,aAAa;IACxBQ,QAAQ,EAAE;EACd,CAAC,CACL,CAAC;AACL;AAAC,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}