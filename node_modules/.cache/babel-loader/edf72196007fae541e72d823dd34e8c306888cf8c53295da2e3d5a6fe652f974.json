{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Dropdown } from '../components/Dropdown';\nimport './DropdownPage.css';\nimport React from 'react';\nexport function DropdownPage() {\n  _s();\n  const [hoverValue, setHoverValue] = useState('Option 1');\n  const [clickValue, setClickValue] = useState('');\n  const options = ['Option 1', 'Option 2', 'Option 3', 'Option 4', 'Option 5', 'Option 6', 'Option 7', 'Option 8'];\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'dropdown-page-container'\n  }, [/*#__PURE__*/React.createElement('h1', {\n    className: 'dropdown-page-title'\n  }, 'Dropdown Examples'), /*#__PURE__*/React.createElement('div', {\n    className: 'dropdown-examples-container'\n  }, [createDropdownExample('Hover Dropdown with Wheel Scrolling', 'Hover over the dropdown and use the mouse wheel to cycle through options.', 'hover', hoverValue, setHoverValue, options), createDropdownExample('Click Dropdown', 'Click to open the dropdown and select an option.', 'click', clickValue, setClickValue, options)])]);\n}\n_s(DropdownPage, \"0+4JsW41rZvIy+K4igoprlW75/M=\");\n_c = DropdownPage;\nfunction createDropdownExample(title, description, type, value, onChange, options) {\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'dropdown-example'\n  }, [/*#__PURE__*/React.createElement('h2', {\n    className: 'dropdown-example-title'\n  }, title), /*#__PURE__*/React.createElement('p', {\n    className: 'dropdown-example-description'\n  }, description), /*#__PURE__*/React.createElement(Dropdown, {\n    type: type,\n    options: options,\n    value: value,\n    onChange: onChange,\n    label: 'Select an option'\n  })]);\n}\nvar _c;\n$RefreshReg$(_c, \"DropdownPage\");","map":{"version":3,"names":["useState","Dropdown","React","DropdownPage","_s","hoverValue","setHoverValue","clickValue","setClickValue","options","createElement","className","createDropdownExample","_c","title","description","type","value","onChange","label","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/untitled/src/pages/DropdownPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { Dropdown } from '../components/Dropdown';\r\nimport './DropdownPage.css';\r\nimport React from 'react';\r\n\r\nexport function DropdownPage() {\r\n    const [hoverValue, setHoverValue] = useState('Option 1');\r\n    const [clickValue, setClickValue] = useState('');\r\n\r\n    const options = [\r\n        'Option 1',\r\n        'Option 2',\r\n        'Option 3',\r\n        'Option 4',\r\n        'Option 5',\r\n        'Option 6',\r\n        'Option 7',\r\n        'Option 8',\r\n    ];\r\n\r\n    return React.createElement(\r\n        'div',\r\n        { className: 'dropdown-page-container' },\r\n        [\r\n            React.createElement(\r\n                'h1',\r\n                { className: 'dropdown-page-title' },\r\n                'Dropdown Examples'\r\n            ),\r\n            React.createElement(\r\n                'div',\r\n                { className: 'dropdown-examples-container' },\r\n                [\r\n                    createDropdownExample(\r\n                        'Hover Dropdown with Wheel Scrolling',\r\n                        'Hover over the dropdown and use the mouse wheel to cycle through options.',\r\n                        'hover',\r\n                        hoverValue,\r\n                        setHoverValue,\r\n                        options\r\n                    ),\r\n                    createDropdownExample(\r\n                        'Click Dropdown',\r\n                        'Click to open the dropdown and select an option.',\r\n                        'click',\r\n                        clickValue,\r\n                        setClickValue,\r\n                        options\r\n                    )\r\n                ]\r\n            )\r\n        ]\r\n    );\r\n}\r\n\r\nfunction createDropdownExample(title, description, type, value, onChange, options) {\r\n    return React.createElement(\r\n        'div',\r\n        { className: 'dropdown-example' },\r\n        [\r\n            React.createElement(\r\n                'h2',\r\n                { className: 'dropdown-example-title' },\r\n                title\r\n            ),\r\n            React.createElement(\r\n                'p',\r\n                { className: 'dropdown-example-description' },\r\n                description\r\n            ),\r\n            React.createElement(Dropdown, {\r\n                type: type,\r\n                options: options,\r\n                value: value,\r\n                onChange: onChange,\r\n                label: 'Select an option'\r\n            })\r\n        ]\r\n    );\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,UAAU,CAAC;EACxD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,OAAO,GAAG,CACZ,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,CACb;EAED,oBAAOP,KAAK,CAACQ,aAAa,CACtB,KAAK,EACL;IAAEC,SAAS,EAAE;EAA0B,CAAC,EACxC,cACIT,KAAK,CAACQ,aAAa,CACf,IAAI,EACJ;IAAEC,SAAS,EAAE;EAAsB,CAAC,EACpC,mBACJ,CAAC,eACDT,KAAK,CAACQ,aAAa,CACf,KAAK,EACL;IAAEC,SAAS,EAAE;EAA8B,CAAC,EAC5C,CACIC,qBAAqB,CACjB,qCAAqC,EACrC,2EAA2E,EAC3E,OAAO,EACPP,UAAU,EACVC,aAAa,EACbG,OACJ,CAAC,EACDG,qBAAqB,CACjB,gBAAgB,EAChB,kDAAkD,EAClD,OAAO,EACPL,UAAU,EACVC,aAAa,EACbC,OACJ,CAAC,CAET,CAAC,CAET,CAAC;AACL;AAACL,EAAA,CAhDeD,YAAY;AAAAU,EAAA,GAAZV,YAAY;AAkD5B,SAASS,qBAAqBA,CAACE,KAAK,EAAEC,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAET,OAAO,EAAE;EAC/E,oBAAOP,KAAK,CAACQ,aAAa,CACtB,KAAK,EACL;IAAEC,SAAS,EAAE;EAAmB,CAAC,EACjC,cACIT,KAAK,CAACQ,aAAa,CACf,IAAI,EACJ;IAAEC,SAAS,EAAE;EAAyB,CAAC,EACvCG,KACJ,CAAC,eACDZ,KAAK,CAACQ,aAAa,CACf,GAAG,EACH;IAAEC,SAAS,EAAE;EAA+B,CAAC,EAC7CI,WACJ,CAAC,eACDb,KAAK,CAACQ,aAAa,CAACT,QAAQ,EAAE;IAC1Be,IAAI,EAAEA,IAAI;IACVP,OAAO,EAAEA,OAAO;IAChBQ,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA,QAAQ;IAClBC,KAAK,EAAE;EACX,CAAC,CAAC,CAEV,CAAC;AACL;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}