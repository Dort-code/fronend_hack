{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\WebstormProjects\\\\fronend_hack\\\\src\\\\Page\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Registration.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Registration() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    lastName: '',\n    surname: '',\n    login: '',\n    password: '',\n    email: '',\n    token: ''\n  });\n  const handleSubmit = function (e) {\n    e.preventDefault();\n\n    // Заглушка: просто выводим данные формы в консоль\n    console.log('Данные формы:', formData);\n\n    // Можно добавить здесь имитацию отправки на сервер\n    alert(`Регистрация успешна!\\nЛогин: ${formData.login}\\nEmail: ${formData.email}`);\n\n    // Очищаем форму\n    setFormData({\n      name: '',\n      lastName: '',\n      surname: '',\n      login: '',\n      password: '',\n      email: '',\n      token: ''\n    });\n  };\n  const handleInputChange = function (e) {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [createInputField('name', 'Имя', formData.name, handleInputChange, 'text'), createInputField('lastName', 'Фамилия', formData.lastName, handleInputChange, 'text'), createInputField('surname', 'Отчество', formData.surname, handleInputChange, 'text'), createInputField('login', 'Логин', formData.login, handleInputChange, 'text'), createInputField('password', 'Пароль', formData.password, handleInputChange, 'password'), createInputField('email', 'Почта', formData.email, handleInputChange, 'email'), createInputField('token', 'Токен', formData.token, handleInputChange, 'text'), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n// Вспомогательная функция для создания полей ввода\n_s(Registration, \"0xEfePKQV/dzcullEklWWYt3mcw=\");\n_c = Registration;\nfunction createInputField(id, label, value, onChange, type = 'text') {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"input-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      id: id,\n      value: value,\n      onChange: onChange,\n      className: \"input-field\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Registration","_s","formData","setFormData","name","lastName","surname","login","password","email","token","handleSubmit","e","preventDefault","console","log","alert","handleInputChange","id","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","createInputField","type","_c","label","onChange","htmlFor","required","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/fronend_hack/src/Page/Registration.js"],"sourcesContent":["import {useState} from 'react';\r\nimport './Registration.css';\r\n\r\nexport function Registration() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        surname: '',\r\n        login: '',\r\n        password: '',\r\n        email: '',\r\n        token: '',\r\n    });\r\n\r\n    const handleSubmit = function (e) {\r\n        e.preventDefault();\r\n\r\n        // Заглушка: просто выводим данные формы в консоль\r\n        console.log('Данные формы:', formData);\r\n\r\n        // Можно добавить здесь имитацию отправки на сервер\r\n        alert(`Регистрация успешна!\\nЛогин: ${formData.login}\\nEmail: ${formData.email}`);\r\n\r\n        // Очищаем форму\r\n        setFormData({\r\n            name: '',\r\n            lastName: '',\r\n            surname: '',\r\n            login: '',\r\n            password: '',\r\n            email: '',\r\n            token: '',\r\n        });\r\n    };\r\n\r\n    const handleInputChange = function (e) {\r\n        const {id, value} = e.target;\r\n        setFormData(prev => ({...prev, [id]: value}));\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-overlay\">\r\n            <div className=\"form-container\">\r\n                <h1 className=\"form-title\">Добро пожаловать!</h1>\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n                    {createInputField('name', 'Имя', formData.name, handleInputChange, 'text')}\r\n                    {createInputField('lastName', 'Фамилия', formData.lastName, handleInputChange, 'text')}\r\n                    {createInputField('surname', 'Отчество', formData.surname, handleInputChange, 'text')}\r\n                    {createInputField('login', 'Логин', formData.login, handleInputChange, 'text')}\r\n                    {createInputField('password', 'Пароль', formData.password, handleInputChange, 'password')}\r\n                    {createInputField('email', 'Почта', formData.email, handleInputChange, 'email')}\r\n                    {createInputField('token', 'Токен', formData.token, handleInputChange, 'text')}\r\n                    <button type=\"submit\" className=\"submit-button\">\r\n                        Зарегистрироваться\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Вспомогательная функция для создания полей ввода\r\nfunction createInputField(id, label, value, onChange, type = 'text') {\r\n    return (\r\n        <div className=\"input-group\">\r\n            <label htmlFor={id} className=\"input-label\">\r\n                {label}\r\n            </label>\r\n            <input\r\n                type={type}\r\n                id={id}\r\n                value={value}\r\n                onChange={onChange}\r\n                className=\"input-field\"\r\n                required\r\n            />\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}