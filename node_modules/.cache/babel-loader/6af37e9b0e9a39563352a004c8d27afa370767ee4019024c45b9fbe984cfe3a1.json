{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\WebstormProjects\\\\fronend_hack\\\\src\\\\components\\\\Admin\\\\HederAdminPA.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { HeaderAD } from './Header/HeaderAD';\nimport { GroupsList } from './Groups/GroupsList';\nimport { GroupDetails } from './Groups/GroupDetails';\nimport { Results } from './Results/Results';\nimport './HederAdminPA.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function HederAdminPA({\n  onLogout\n}) {\n  _s();\n  const API_BASE_URL = 'https://your-api-endpoint.com/api';\n  const [menuList] = useState([{\n    id: 1,\n    text: \"Группы\",\n    form: \"groups\"\n  }, {\n    id: 2,\n    text: \"Итоги\",\n    form: \"results\"\n  }]);\n  const [showMenu, setShowMenu] = useState(false);\n  const [activeForm, setActiveForm] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [groups, setGroups] = useState([]);\n  const [newGroupName, setNewGroupName] = useState(\"\");\n  const [newGroupLink, setNewGroupLink] = useState(\"\");\n  const [allUsers, setAllUsers] = useState([]);\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const menuRef = useRef(null);\n  const userDropdownRef = useRef(null);\n\n  // Загрузка начальных данных\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setIsLoading(true);\n      try {\n        const [groupsRes, usersRes] = await Promise.all([fetch(`${API_BASE_URL}/groups`), fetch(`${API_BASE_URL}/users`)]);\n        if (!groupsRes.ok) throw new Error('Ошибка загрузки групп');\n        if (!usersRes.ok) throw new Error('Ошибка загрузки пользователей');\n        const groupsData = await groupsRes.json();\n        const usersData = await usersRes.json();\n        setGroups(groupsData);\n        setAllUsers(usersData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const handleLogoutClick = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Ошибка выхода');\n      onLogout();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const toggleMenu = () => setShowMenu(!showMenu);\n  const handleMenuItemClick = formName => {\n    setActiveForm(activeForm === formName ? null : formName);\n    setSelectedGroup(null);\n    setShowMenu(false);\n  };\n\n  // Закрытие выпадающих меню при клике вне их области\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n      if (userDropdownRef.current && !userDropdownRef.current.contains(event.target)) {\n        setShowUserDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Создание новой группы\n  const createGroup = async () => {\n    if (!newGroupName.trim() || !newGroupLink.trim()) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          name: newGroupName,\n          link: newGroupLink,\n          userIds: selectedUsers\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Ошибка создания группы');\n      }\n      const newGroup = await response.json();\n      setGroups([...groups, newGroup]);\n      setNewGroupName(\"\");\n      setNewGroupLink(\"\");\n      setSelectedUsers([]);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Удаление группы\n  const deleteGroup = async groupId => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${groupId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Ошибка удаления группы');\n      setGroups(groups.filter(group => group.id !== groupId));\n      if ((selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.id) === groupId) {\n        setSelectedGroup(null);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Назначение председателя\n  const handleAssignChairman = async userId => {\n    if (!selectedGroup) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${selectedGroup.id}/chairman`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка назначения председателя');\n      const updatedGroup = await response.json();\n      updateGroupState(updatedGroup);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Снятие председателя\n  const handleRemoveChairman = async () => {\n    if (!selectedGroup) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${selectedGroup.id}/chairman`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Ошибка снятия председателя');\n      const updatedGroup = await response.json();\n      updateGroupState(updatedGroup);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Обновление состояния группы после изменений\n  const updateGroupState = updatedGroup => {\n    setGroups(groups.map(group => group.id === updatedGroup.id ? updatedGroup : group));\n    if ((selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.id) === updatedGroup.id) {\n      setSelectedGroup(updatedGroup);\n    }\n  };\n\n  // Добавление пользователей в группу\n  const addUsersToGroup = async () => {\n    if (!selectedGroup || selectedUsers.length === 0) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${selectedGroup.id}/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          userIds: selectedUsers\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка добавления пользователей');\n      const updatedGroup = await response.json();\n      updateGroupState(updatedGroup);\n      setSelectedUsers([]);\n      setShowUserDropdown(false);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Удаление пользователя из группы\n  const removeUserFromGroup = async userId => {\n    if (!selectedGroup) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${selectedGroup.id}/users/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Ошибка удаления пользователя');\n      const updatedGroup = await response.json();\n      updateGroupState(updatedGroup);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Добавление документа в группу\n  const handleDocumentAdd = async file => {\n    if (!selectedGroup || !file) return;\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('document', file);\n      const response = await fetch(`${API_BASE_URL}/groups/${selectedGroup.id}/documents`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formData\n      });\n      if (!response.ok) throw new Error('Ошибка загрузки документа');\n      const updatedGroup = await response.json();\n      updateGroupState(updatedGroup);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Удаление документа из группы\n  const handleDocumentDelete = async docId => {\n    if (!selectedGroup) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/groups/${selectedGroup.id}/documents/${docId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Ошибка удаления документа');\n      const updatedGroup = await response.json();\n      updateGroupState(updatedGroup);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Обработчики UI\n  const toggleUserSelection = userId => {\n    setSelectedUsers(prev => prev.includes(userId) ? prev.filter(id => id !== userId) : [...prev, userId]);\n  };\n  const selectGroup = group => {\n    setSelectedGroup(group);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderAD, {\n      toggleMenu: toggleMenu,\n      handleLogout: handleLogoutClick,\n      showMenu: showMenu,\n      menuRef: menuRef,\n      children: showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-dropdown\",\n        ref: menuRef,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: menuList.map(menu => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleMenuItemClick(menu.form),\n            className: `menu-item ${activeForm === menu.form ? 'active' : ''}`,\n            children: menu.text\n          }, menu.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content-area\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }, this), activeForm === 'groups' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: !selectedGroup ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\\u043C\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"creation-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\",\n                  value: newGroupName,\n                  onChange: e => setNewGroupName(e.target.value),\n                  className: \"text-input\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443\",\n                  value: newGroupLink,\n                  onChange: e => setNewGroupLink(e.target.value),\n                  className: \"text-input\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-selection\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"select-users-btn\",\n                  onClick: () => setShowUserDropdown(!showUserDropdown),\n                  disabled: isLoading,\n                  children: selectedUsers.length > 0 ? `Выбрано: ${selectedUsers.length}` : \"Выберите пользователей\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 45\n                }, this), showUserDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-dropdown\",\n                  ref: userDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown-header\",\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"users-list\",\n                    children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"user-checkbox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        id: `user-${user.id}`,\n                        checked: selectedUsers.includes(user.id),\n                        onChange: () => toggleUserSelection(user.id),\n                        disabled: isLoading\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `user-${user.id}`,\n                        children: user.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 65\n                      }, this)]\n                    }, user.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 61\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        setSelectedUsers([]);\n                        setShowUserDropdown(false);\n                      },\n                      className: \"cancel-btn\",\n                      disabled: isLoading,\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setShowUserDropdown(false),\n                      className: \"confirm-btn\",\n                      disabled: isLoading,\n                      children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: createGroup,\n                className: \"action-button\",\n                disabled: !newGroupName.trim() || !newGroupLink.trim() || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 45\n                }, this), \" \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(GroupsList, {\n            groups: groups,\n            selectGroup: selectGroup,\n            deleteGroup: deleteGroup,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(GroupDetails, {\n          group: selectedGroup,\n          onAssignChairman: handleAssignChairman,\n          onRemoveChairman: handleRemoveChairman,\n          onDocumentAdd: handleDocumentAdd,\n          onDocumentDelete: handleDocumentDelete,\n          onBack: () => setSelectedGroup(null),\n          onAddUsers: () => setShowUserDropdown(true),\n          onRemoveUser: removeUserFromGroup,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }, this), activeForm === 'results' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: /*#__PURE__*/_jsxDEV(Results, {\n          onClose: () => setActiveForm(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }, this), !activeForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043B \\u0434\\u043B\\u044F \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043C\\u0435\\u043D\\u044E \\u0432 \\u0432\\u0435\\u0440\\u0445\\u043D\\u0435\\u043C \\u043B\\u0435\\u0432\\u043E\\u043C \\u0443\\u0433\\u043B\\u0443 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0432\\u0438\\u0433\\u0430\\u0446\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }, this), selectedGroup && showUserDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-dropdown-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          ref: userDropdownRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0432 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowUserDropdown(false),\n              className: \"close-dropdown\",\n              disabled: isLoading,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list\",\n            children: allUsers.filter(user => !selectedGroup.users.some(u => u.id === user.id)).map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `add-user-${user.id}`,\n                checked: selectedUsers.includes(user.id),\n                onChange: () => toggleUserSelection(user.id),\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `add-user-${user.id}`,\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 45\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedUsers([]);\n                setShowUserDropdown(false);\n              },\n              className: \"cancel-btn\",\n              disabled: isLoading,\n              children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addUsersToGroup,\n              disabled: selectedUsers.length === 0 || isLoading,\n              className: \"confirm-btn\",\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 9\n  }, this);\n}\n_s(HederAdminPA, \"L6SQs4nAmNRXHavAN+hCBJ1eDSI=\");\n_c = HederAdminPA;\nvar _c;\n$RefreshReg$(_c, \"HederAdminPA\");","map":{"version":3,"names":["React","useState","useRef","useEffect","HeaderAD","GroupsList","GroupDetails","Results","jsxDEV","_jsxDEV","Fragment","_Fragment","HederAdminPA","onLogout","_s","API_BASE_URL","menuList","id","text","form","showMenu","setShowMenu","activeForm","setActiveForm","selectedGroup","setSelectedGroup","groups","setGroups","newGroupName","setNewGroupName","newGroupLink","setNewGroupLink","allUsers","setAllUsers","showUserDropdown","setShowUserDropdown","selectedUsers","setSelectedUsers","isLoading","setIsLoading","error","setError","menuRef","userDropdownRef","fetchInitialData","groupsRes","usersRes","Promise","all","fetch","ok","Error","groupsData","json","usersData","err","message","handleLogoutClick","response","method","credentials","toggleMenu","handleMenuItemClick","formName","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","createGroup","trim","headers","localStorage","getItem","body","JSON","stringify","name","link","userIds","errorData","newGroup","deleteGroup","groupId","filter","group","handleAssignChairman","userId","updatedGroup","updateGroupState","handleRemoveChairman","map","addUsersToGroup","length","removeUserFromGroup","handleDocumentAdd","file","formData","FormData","append","handleDocumentDelete","docId","toggleUserSelection","prev","includes","selectGroup","className","children","handleLogout","ref","menu","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","disabled","user","checked","htmlFor","onAssignChairman","onRemoveChairman","onDocumentAdd","onDocumentDelete","onBack","onAddUsers","onRemoveUser","onClose","users","some","u","_c","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/fronend_hack/src/components/Admin/HederAdminPA.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { HeaderAD } from './Header/HeaderAD';\r\nimport { GroupsList } from './Groups/GroupsList';\r\nimport { GroupDetails } from './Groups/GroupDetails';\r\nimport { Results } from './Results/Results';\r\nimport './HederAdminPA.css';\r\n\r\nexport function HederAdminPA({ onLogout }) {\r\n    const API_BASE_URL = 'https://your-api-endpoint.com/api';\r\n    const [menuList] = useState([\r\n        { id: 1, text: \"Группы\", form: \"groups\" },\r\n        { id: 2, text: \"Итоги\", form: \"results\" }\r\n    ]);\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [activeForm, setActiveForm] = useState(null);\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n    const [groups, setGroups] = useState([]);\r\n    const [newGroupName, setNewGroupName] = useState(\"\");\r\n    const [newGroupLink, setNewGroupLink] = useState(\"\");\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [showUserDropdown, setShowUserDropdown] = useState(false);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const menuRef = useRef(null);\r\n    const userDropdownRef = useRef(null);\r\n\r\n    // Загрузка начальных данных\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const [groupsRes, usersRes] = await Promise.all([\r\n                    fetch(`${API_BASE_URL}/groups`),\r\n                    fetch(`${API_BASE_URL}/users`)\r\n                ]);\r\n\r\n                if (!groupsRes.ok) throw new Error('Ошибка загрузки групп');\r\n                if (!usersRes.ok) throw new Error('Ошибка загрузки пользователей');\r\n\r\n                const groupsData = await groupsRes.json();\r\n                const usersData = await usersRes.json();\r\n\r\n                setGroups(groupsData);\r\n                setAllUsers(usersData);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    const handleLogoutClick = async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/auth/logout`, {\r\n                method: 'POST',\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Ошибка выхода');\r\n            onLogout();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const toggleMenu = () => setShowMenu(!showMenu);\r\n\r\n    const handleMenuItemClick = (formName) => {\r\n        setActiveForm(activeForm === formName ? null : formName);\r\n        setSelectedGroup(null);\r\n        setShowMenu(false);\r\n    };\r\n\r\n    // Закрытие выпадающих меню при клике вне их области\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setShowMenu(false);\r\n            }\r\n            if (userDropdownRef.current && !userDropdownRef.current.contains(event.target)) {\r\n                setShowUserDropdown(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    // Создание новой группы\r\n    const createGroup = async () => {\r\n        if (!newGroupName.trim() || !newGroupLink.trim()) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/groups`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify({\r\n                    name: newGroupName,\r\n                    link: newGroupLink,\r\n                    userIds: selectedUsers\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Ошибка создания группы');\r\n            }\r\n\r\n            const newGroup = await response.json();\r\n            setGroups([...groups, newGroup]);\r\n            setNewGroupName(\"\");\r\n            setNewGroupLink(\"\");\r\n            setSelectedUsers([]);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Удаление группы\r\n    const deleteGroup = async (groupId) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/groups/${groupId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Ошибка удаления группы');\r\n\r\n            setGroups(groups.filter(group => group.id !== groupId));\r\n            if (selectedGroup?.id === groupId) {\r\n                setSelectedGroup(null);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Назначение председателя\r\n    const handleAssignChairman = async (userId) => {\r\n        if (!selectedGroup) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\r\n                `${API_BASE_URL}/groups/${selectedGroup.id}/chairman`,\r\n                {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    },\r\n                    body: JSON.stringify({ userId })\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Ошибка назначения председателя');\r\n\r\n            const updatedGroup = await response.json();\r\n            updateGroupState(updatedGroup);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Снятие председателя\r\n    const handleRemoveChairman = async () => {\r\n        if (!selectedGroup) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\r\n                `${API_BASE_URL}/groups/${selectedGroup.id}/chairman`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Ошибка снятия председателя');\r\n\r\n            const updatedGroup = await response.json();\r\n            updateGroupState(updatedGroup);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Обновление состояния группы после изменений\r\n    const updateGroupState = (updatedGroup) => {\r\n        setGroups(groups.map(group =>\r\n            group.id === updatedGroup.id ? updatedGroup : group\r\n        ));\r\n        if (selectedGroup?.id === updatedGroup.id) {\r\n            setSelectedGroup(updatedGroup);\r\n        }\r\n    };\r\n\r\n    // Добавление пользователей в группу\r\n    const addUsersToGroup = async () => {\r\n        if (!selectedGroup || selectedUsers.length === 0) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\r\n                `${API_BASE_URL}/groups/${selectedGroup.id}/users`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    },\r\n                    body: JSON.stringify({ userIds: selectedUsers })\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Ошибка добавления пользователей');\r\n\r\n            const updatedGroup = await response.json();\r\n            updateGroupState(updatedGroup);\r\n            setSelectedUsers([]);\r\n            setShowUserDropdown(false);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Удаление пользователя из группы\r\n    const removeUserFromGroup = async (userId) => {\r\n        if (!selectedGroup) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\r\n                `${API_BASE_URL}/groups/${selectedGroup.id}/users/${userId}`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Ошибка удаления пользователя');\r\n\r\n            const updatedGroup = await response.json();\r\n            updateGroupState(updatedGroup);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Добавление документа в группу\r\n    const handleDocumentAdd = async (file) => {\r\n        if (!selectedGroup || !file) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('document', file);\r\n\r\n            const response = await fetch(\r\n                `${API_BASE_URL}/groups/${selectedGroup.id}/documents`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    },\r\n                    body: formData\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Ошибка загрузки документа');\r\n\r\n            const updatedGroup = await response.json();\r\n            updateGroupState(updatedGroup);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Удаление документа из группы\r\n    const handleDocumentDelete = async (docId) => {\r\n        if (!selectedGroup) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\r\n                `${API_BASE_URL}/groups/${selectedGroup.id}/documents/${docId}`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Ошибка удаления документа');\r\n\r\n            const updatedGroup = await response.json();\r\n            updateGroupState(updatedGroup);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Обработчики UI\r\n    const toggleUserSelection = (userId) => {\r\n        setSelectedUsers(prev =>\r\n            prev.includes(userId)\r\n                ? prev.filter(id => id !== userId)\r\n                : [...prev, userId]\r\n        );\r\n    };\r\n\r\n    const selectGroup = (group) => {\r\n        setSelectedGroup(group);\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <HeaderAD\r\n                toggleMenu={toggleMenu}\r\n                handleLogout={handleLogoutClick}\r\n                showMenu={showMenu}\r\n                menuRef={menuRef}\r\n            >\r\n                {showMenu && (\r\n                    <div className=\"menu-dropdown\" ref={menuRef}>\r\n                        <ul>\r\n                            {menuList.map(menu => (\r\n                                <li\r\n                                    key={menu.id}\r\n                                    onClick={() => handleMenuItemClick(menu.form)}\r\n                                    className={`menu-item ${activeForm === menu.form ? 'active' : ''}`}\r\n                                >\r\n                                    {menu.text}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </HeaderAD>\r\n\r\n            <div className=\"admin-content-area\">\r\n                {isLoading && (\r\n                    <div className=\"loading-overlay\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>Загрузка...</p>\r\n                    </div>\r\n                )}\r\n\r\n                {error && (\r\n                    <div className=\"error-message\">\r\n                        <p>{error}</p>\r\n                        <button onClick={() => setError(null)}>Закрыть</button>\r\n                    </div>\r\n                )}\r\n\r\n                {activeForm === 'groups' && (\r\n                    <div className=\"content-section\">\r\n                        {!selectedGroup ? (\r\n                            <>\r\n                                <div className=\"section-header\">\r\n                                    <h2>Управление группами</h2>\r\n                                    <div className=\"creation-form\">\r\n                                        <div className=\"input-group\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Название группы\"\r\n                                                value={newGroupName}\r\n                                                onChange={(e) => setNewGroupName(e.target.value)}\r\n                                                className=\"text-input\"\r\n                                                disabled={isLoading}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Ссылка на группу\"\r\n                                                value={newGroupLink}\r\n                                                onChange={(e) => setNewGroupLink(e.target.value)}\r\n                                                className=\"text-input\"\r\n                                                disabled={isLoading}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"user-selection\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"select-users-btn\"\r\n                                                onClick={() => setShowUserDropdown(!showUserDropdown)}\r\n                                                disabled={isLoading}\r\n                                            >\r\n                                                {selectedUsers.length > 0\r\n                                                    ? `Выбрано: ${selectedUsers.length}`\r\n                                                    : \"Выберите пользователей\"}\r\n                                            </button>\r\n                                            {showUserDropdown && (\r\n                                                <div className=\"user-dropdown\" ref={userDropdownRef}>\r\n                                                    <div className=\"dropdown-header\">\r\n                                                        <h4>Выберите пользователей</h4>\r\n                                                    </div>\r\n                                                    <div className=\"users-list\">\r\n                                                        {allUsers.map(user => (\r\n                                                            <div key={user.id} className=\"user-checkbox\">\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    id={`user-${user.id}`}\r\n                                                                    checked={selectedUsers.includes(user.id)}\r\n                                                                    onChange={() => toggleUserSelection(user.id)}\r\n                                                                    disabled={isLoading}\r\n                                                                />\r\n                                                                <label htmlFor={`user-${user.id}`}>\r\n                                                                    {user.name}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <div className=\"dropdown-actions\">\r\n                                                        <button\r\n                                                            onClick={() => {\r\n                                                                setSelectedUsers([]);\r\n                                                                setShowUserDropdown(false);\r\n                                                            }}\r\n                                                            className=\"cancel-btn\"\r\n                                                            disabled={isLoading}\r\n                                                        >\r\n                                                            Отмена\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => setShowUserDropdown(false)}\r\n                                                            className=\"confirm-btn\"\r\n                                                            disabled={isLoading}\r\n                                                        >\r\n                                                            Готово\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                        <button\r\n                                            onClick={createGroup}\r\n                                            className=\"action-button\"\r\n                                            disabled={!newGroupName.trim() || !newGroupLink.trim() || isLoading}\r\n                                        >\r\n                                            <span>+</span> Создать группу\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <GroupsList\r\n                                    groups={groups}\r\n                                    selectGroup={selectGroup}\r\n                                    deleteGroup={deleteGroup}\r\n                                    isLoading={isLoading}\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <GroupDetails\r\n                                group={selectedGroup}\r\n                                onAssignChairman={handleAssignChairman}\r\n                                onRemoveChairman={handleRemoveChairman}\r\n                                onDocumentAdd={handleDocumentAdd}\r\n                                onDocumentDelete={handleDocumentDelete}\r\n                                onBack={() => setSelectedGroup(null)}\r\n                                onAddUsers={() => setShowUserDropdown(true)}\r\n                                onRemoveUser={removeUserFromGroup}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeForm === 'results' && (\r\n                    <div className=\"content-section\">\r\n                        <Results onClose={() => setActiveForm(null)} />\r\n                    </div>\r\n                )}\r\n\r\n                {!activeForm && (\r\n                    <div className=\"empty-state\">\r\n                        <h3>Выберите раздел для работы</h3>\r\n                        <p>Используйте меню в верхнем левом углу для навигации</p>\r\n                    </div>\r\n                )}\r\n\r\n                {selectedGroup && showUserDropdown && (\r\n                    <div className=\"user-dropdown-modal\">\r\n                        <div className=\"dropdown-content\" ref={userDropdownRef}>\r\n                            <div className=\"dropdown-header\">\r\n                                <h4>Добавить пользователей в группу</h4>\r\n                                <button\r\n                                    onClick={() => setShowUserDropdown(false)}\r\n                                    className=\"close-dropdown\"\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    ×\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"users-list\">\r\n                                {allUsers\r\n                                    .filter(user => !selectedGroup.users.some(u => u.id === user.id))\r\n                                    .map(user => (\r\n                                        <div key={user.id} className=\"user-checkbox\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                id={`add-user-${user.id}`}\r\n                                                checked={selectedUsers.includes(user.id)}\r\n                                                onChange={() => toggleUserSelection(user.id)}\r\n                                                disabled={isLoading}\r\n                                            />\r\n                                            <label htmlFor={`add-user-${user.id}`}>\r\n                                                {user.name}\r\n                                            </label>\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                            <div className=\"dropdown-actions\">\r\n                                <button\r\n                                    onClick={() => {\r\n                                        setSelectedUsers([]);\r\n                                        setShowUserDropdown(false);\r\n                                    }}\r\n                                    className=\"cancel-btn\"\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    Отмена\r\n                                </button>\r\n                                <button\r\n                                    onClick={addUsersToGroup}\r\n                                    disabled={selectedUsers.length === 0 || isLoading}\r\n                                    className=\"confirm-btn\"\r\n                                >\r\n                                    Добавить выбранных\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}