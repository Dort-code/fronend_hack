{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\WebstormProjects\\\\fronend_hack\\\\src\\\\Page\\\\HederUserPA.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaBell, FaSignOutAlt, FaEnvelope, FaUsers, FaVoteYea, FaFileDownload } from \"react-icons/fa\";\nimport logo from \"./TNS_Energo_logo.png\";\nimport './HederUserPA.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HederUserPA({\n  onLogout,\n  userId\n}) {\n  _s();\n  const API_BASE_URL = 'https://your-api-endpoint.com/api';\n  const [notifications, setNotifications] = useState([]);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const notificationsRef = useRef(null);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  // Загрузка уведомлений\n  const fetchNotifications = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}/notifications`);\n      if (!response.ok) throw new Error('Ошибка загрузки уведомлений');\n      const data = await response.json();\n      setNotifications(data);\n      setUnreadCount(data.filter(n => !n.read).length);\n    } catch (err) {\n      console.error('Notification error:', err);\n    }\n  };\n\n  // Отметка уведомлений как прочитанных\n  const markAsRead = async notificationIds => {\n    try {\n      await fetch(`${API_BASE_URL}/notifications/mark-read`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          notificationIds\n        })\n      });\n      fetchNotifications();\n    } catch (err) {\n      console.error('Mark read error:', err);\n    }\n  };\n\n  // Обработчик клика по уведомлениям\n  const handleNotificationClick = notification => {\n    if (!notification.read) {\n      markAsRead([notification.id]);\n    }\n    // Дополнительная логика в зависимости от типа уведомления\n  };\n\n  // Иконка для типа уведомления\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'group_invite':\n        return /*#__PURE__*/_jsxDEV(FaUsers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }, this);\n      case 'conference':\n        return /*#__PURE__*/_jsxDEV(FaEnvelope, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }, this);\n      case 'vote':\n        return /*#__PURE__*/_jsxDEV(FaVoteYea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(FaFileDownload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FaBell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n    const interval = setInterval(fetchNotifications, 60000); // Обновление каждую минуту\n    return () => clearInterval(interval);\n  }, [userId]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (notificationsRef.current && !notificationsRef.current.contains(event.target)) {\n        if (!event.target.closest('.notification-btn')) {\n          setShowNotifications(false);\n          // Помечаем все как прочитанные при закрытии\n          const unreadIds = notifications.filter(n => !n.read).map(n => n.id);\n          if (unreadIds.length > 0) markAsRead(unreadIds);\n        }\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [notifications]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-btn\",\n      onClick: () => setShowNotifications(!showNotifications),\n      \"aria-label\": \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\",\n      children: [/*#__PURE__*/_jsxDEV(FaBell, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F \\u0422\\u041D\\u0421 \\u042D\\u043D\\u0435\\u0440\\u0433\\u043E\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-btn\",\n      onClick: onLogout,\n      \"aria-label\": \"\\u0412\\u044B\\u0445\\u043E\\u0434\",\n      children: /*#__PURE__*/_jsxDEV(FaSignOutAlt, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), showNotifications && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      ref: notificationsRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsRead(notifications.map(n => n.id)),\n          className: \"mark-all-read\",\n          children: \"\\u041F\\u0440\\u043E\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: notification.read ? 'read' : 'unread',\n          onClick: () => handleNotificationClick(notification),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon\",\n            children: getNotificationIcon(notification.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"notification-text\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: new Date(notification.createdAt).toLocaleTimeString('ru-RU', {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-notifications\",\n        children: \"\\u041D\\u043E\\u0432\\u044B\\u0445 \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(HederUserPA, \"n7+syU4GM+S3sOn2KNv0Tm5DY90=\");\n_c = HederUserPA;\nvar _c;\n$RefreshReg$(_c, \"HederUserPA\");","map":{"version":3,"names":["React","useEffect","useRef","useState","FaBell","FaSignOutAlt","FaEnvelope","FaUsers","FaVoteYea","FaFileDownload","logo","jsxDEV","_jsxDEV","HederUserPA","onLogout","userId","_s","API_BASE_URL","notifications","setNotifications","showNotifications","setShowNotifications","notificationsRef","unreadCount","setUnreadCount","fetchNotifications","response","fetch","ok","Error","data","json","filter","n","read","length","err","console","error","markAsRead","notificationIds","method","headers","localStorage","getItem","body","JSON","stringify","handleNotificationClick","notification","id","getNotificationIcon","type","fileName","_jsxFileName","lineNumber","columnNumber","interval","setInterval","clearInterval","handleClickOutside","event","current","contains","target","closest","unreadIds","map","document","addEventListener","removeEventListener","className","children","onClick","size","src","alt","ref","message","Date","createdAt","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/fronend_hack/src/Page/HederUserPA.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FaBell, FaSignOutAlt, FaEnvelope, FaUsers, FaVoteYea, FaFileDownload } from \"react-icons/fa\";\r\nimport logo from \"./TNS_Energo_logo.png\";\r\nimport './HederUserPA.css';\r\n\r\nexport function HederUserPA({ onLogout, userId }) {\r\n    const API_BASE_URL = 'https://your-api-endpoint.com/api';\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [showNotifications, setShowNotifications] = useState(false);\r\n    const notificationsRef = useRef(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n    // Загрузка уведомлений\r\n    const fetchNotifications = async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users/${userId}/notifications`);\r\n            if (!response.ok) throw new Error('Ошибка загрузки уведомлений');\r\n            const data = await response.json();\r\n            setNotifications(data);\r\n            setUnreadCount(data.filter(n => !n.read).length);\r\n        } catch (err) {\r\n            console.error('Notification error:', err);\r\n        }\r\n    };\r\n\r\n    // Отметка уведомлений как прочитанных\r\n    const markAsRead = async (notificationIds) => {\r\n        try {\r\n            await fetch(`${API_BASE_URL}/notifications/mark-read`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify({ notificationIds })\r\n            });\r\n            fetchNotifications();\r\n        } catch (err) {\r\n            console.error('Mark read error:', err);\r\n        }\r\n    };\r\n\r\n    // Обработчик клика по уведомлениям\r\n    const handleNotificationClick = (notification) => {\r\n        if (!notification.read) {\r\n            markAsRead([notification.id]);\r\n        }\r\n        // Дополнительная логика в зависимости от типа уведомления\r\n    };\r\n\r\n    // Иконка для типа уведомления\r\n    const getNotificationIcon = (type) => {\r\n        switch(type) {\r\n            case 'group_invite': return <FaUsers />;\r\n            case 'conference': return <FaEnvelope />;\r\n            case 'vote': return <FaVoteYea />;\r\n            case 'file': return <FaFileDownload />;\r\n            default: return <FaBell />;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n        const interval = setInterval(fetchNotifications, 60000); // Обновление каждую минуту\r\n        return () => clearInterval(interval);\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (notificationsRef.current && !notificationsRef.current.contains(event.target)) {\r\n                if (!event.target.closest('.notification-btn')) {\r\n                    setShowNotifications(false);\r\n                    // Помечаем все как прочитанные при закрытии\r\n                    const unreadIds = notifications.filter(n => !n.read).map(n => n.id);\r\n                    if (unreadIds.length > 0) markAsRead(unreadIds);\r\n                }\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, [notifications]);\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <button\r\n                className=\"notification-btn\"\r\n                onClick={() => setShowNotifications(!showNotifications)}\r\n                aria-label=\"Уведомления\"\r\n            >\r\n                <FaBell size={20} />\r\n                {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\r\n            </button>\r\n\r\n            <div className=\"logo-container\">\r\n                <img src={logo} alt=\"Логотип ТНС Энерго\" className=\"logo\" />\r\n            </div>\r\n\r\n            <button className=\"logout-btn\" onClick={onLogout} aria-label=\"Выход\">\r\n                <FaSignOutAlt size={20} />\r\n            </button>\r\n\r\n            {showNotifications && (\r\n                <div className=\"notification-dropdown\" ref={notificationsRef}>\r\n                    <div className=\"dropdown-header\">\r\n                        <h3>Уведомления</h3>\r\n                        <button\r\n                            onClick={() => markAsRead(notifications.map(n => n.id))}\r\n                            className=\"mark-all-read\"\r\n                        >\r\n                            Прочитать все\r\n                        </button>\r\n                    </div>\r\n\r\n                    {notifications.length > 0 ? (\r\n                        <ul>\r\n                            {notifications.map(notification => (\r\n                                <li\r\n                                    key={notification.id}\r\n                                    className={notification.read ? 'read' : 'unread'}\r\n                                    onClick={() => handleNotificationClick(notification)}\r\n                                >\r\n                                    <div className=\"notification-icon\">\r\n                                        {getNotificationIcon(notification.type)}\r\n                                    </div>\r\n                                    <div className=\"notification-content\">\r\n                                        <p className=\"notification-text\">{notification.message}</p>\r\n                                        <span className=\"notification-time\">\r\n                                            {new Date(notification.createdAt).toLocaleTimeString('ru-RU', {\r\n                                                hour: '2-digit',\r\n                                                minute: '2-digit'\r\n                                            })}\r\n                                        </span>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p className=\"no-notifications\">Новых уведомлений нет</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </header>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}